/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import interfaces.IJFrame;

import java.awt.Dimension;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.util.HashMap;
import javax.swing.WindowConstants;

import view.component.CookieSwipeButtonSprite;
import view.component.CookieSwipeFrame;

/**
 *
 * @author Lucas
 */
public class MailCSFrame extends CookieSwipeFrame implements IJFrame {

    private HashMap<String, Object> hsJcomponents = new HashMap<String, Object>();

    /**
     * Creates new form MailCSFrame
     */
    public MailCSFrame() {
    	setTitle("Envoi de mail");
        initComponents();
        //this.pack();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setVisible(true);
        
        setExtendedState(MAXIMIZED_BOTH);
        
        hsJcomponents.put("cookieSwipeButtonSend", cookieSwipeButtonSend);
        hsJcomponents.put("cookieSwipeButtonAttach", cookieSwipeButtonAttach);
        hsJcomponents.put("cookieSwipeLabelCc", cookieSwipeLabelCc);
        hsJcomponents.put("cookieSwipeLabelTo", cookieSwipeLabelTo);
        hsJcomponents.put("cookieSwipeTextFieldTo", cookieSwipeTextFieldTo);
        hsJcomponents.put("cookieSwipeTextFieldToCc", cookieSwipeTextFieldToCc);
        hsJcomponents.put("cookieSwipeTextFieldSubject", cookieSwipeTextFieldSubject);
        hsJcomponents.put("jTextAreaMail", jTextAreaMail);
    }

    public void setCookieSwipeTextFieldSubject(String cookieSwipeTextFieldSubject) {
        this.cookieSwipeTextFieldSubject.setText(cookieSwipeTextFieldSubject);
    }

    public void setCookieSwipeTextFieldTo(String cookieSwipeTextFieldTo) {
        this.cookieSwipeTextFieldTo.setText(cookieSwipeTextFieldTo);
    }

    public void setCookieSwipeTextFieldToCc(String cookieSwipeTextFieldToCc) {
        this.cookieSwipeTextFieldToCc.setText(cookieSwipeTextFieldToCc);
    }

    public void setjTextAreaMail(String jTextAreaMail) {
        this.jTextAreaMail.setText(jTextAreaMail);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  void initComponents() {

        cookieSwipeTextFieldTo = new view.component.CookieSwipeTextField();
        cookieSwipeTextFieldToCc = new view.component.CookieSwipeTextField();
        
        cookieSwipeLabelTo = new view.component.CookieSwipeLabel();
        cookieSwipeLabelCc = new view.component.CookieSwipeLabel();
        
        jScrollPane1 = new javax.swing.JScrollPane();
        cookieSwipeTextFieldSubject = new view.component.CookieSwipeTextField();
        cookieSwipeLabelSubject = new view.component.CookieSwipeLabel();
        jTextAreaMail = new view.component.CookieSwipeTextArea();
        
        cookieSwipeButtonSend = new view.component.CookieSwipeButtonSprite();
        cookieSwipeButtonAttach = new view.component.CookieSwipeButtonSprite();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cookieSwipeLabelTo.setText("Ã€ :");
        cookieSwipeLabelCc.setText("Cc :");
        cookieSwipeLabelSubject.setText("Objet :");

        jTextAreaMail.setColumns(20);
        jTextAreaMail.setRows(5);
        jScrollPane1.setViewportView(jTextAreaMail);

        cookieSwipeButtonSend.setText(CookieSwipeButtonSprite.SEND);
        cookieSwipeButtonAttach.setText(CookieSwipeButtonSprite.ATTACH);
        
        addComponentListener(new ComponentListener() {
		    public void componentResized(ComponentEvent e) {
		    	cookieSwipeTextFieldToCc.setPreferredSize(new Dimension(getWidth() - 150, 35));
		    	cookieSwipeTextFieldToCc.setMinimumSize(new Dimension(getWidth() - 150, 35));
		    	cookieSwipeTextFieldToCc.setMaximumSize(new Dimension(getWidth() - 150, 35));
		    	cookieSwipeTextFieldToCc.setMinimumSize(new Dimension(0, 0));
		    	
                cookieSwipeTextFieldSubject.setPreferredSize(new Dimension(getWidth() - 150, 35));
                cookieSwipeTextFieldSubject.setMinimumSize(new Dimension(getWidth() - 150, 35));
                cookieSwipeTextFieldSubject.setMaximumSize(new Dimension(getWidth() - 150, 35));
                cookieSwipeTextFieldSubject.setMinimumSize(new Dimension(0, 0));

		    	cookieSwipeTextFieldTo.setPreferredSize(new Dimension(getWidth() - 185, 35));
		    	cookieSwipeTextFieldTo.setMinimumSize(new Dimension(getWidth() - 150, 35));
		    	cookieSwipeTextFieldTo.setMaximumSize(new Dimension(getWidth() - 150, 35));
		    	cookieSwipeTextFieldTo.setMinimumSize(new Dimension(0, 0));
				
		    	jScrollPane1.setPreferredSize(new Dimension(getWidth() - 150, getHeight() - 200));
				jScrollPane1.setMinimumSize(new Dimension(getWidth() - 150, getHeight() - 200));
				jScrollPane1.setMaximumSize(new Dimension(getWidth() - 150, getHeight() - 200));
				jScrollPane1.setMinimumSize(new Dimension(0, 0));
								
				validate();
				repaint();
				revalidate();
		    }
	
		    @Override
		    public void componentMoved(ComponentEvent e) {
			// TODO Auto-generated method stub
	
		    }
	
		    @Override
		    public void componentShown(ComponentEvent e) {
			// TODO Auto-generated method stub
	
		    }
	
		    @Override
		    public void componentHidden(ComponentEvent e) {
			// TODO Auto-generated method stub
	
		    }
		});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cookieSwipeLabelCc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cookieSwipeLabelTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cookieSwipeLabelSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        		)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, 2000)
                        .addGap(60, 60, 60)
                    )
                    .addGroup(layout.createSequentialGroup()
                		.addComponent(cookieSwipeTextFieldTo, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, 2000)
                		.addComponent(cookieSwipeButtonAttach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cookieSwipeButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                    )
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cookieSwipeTextFieldSubject, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, 2000)
                        .addGap(60, 60, 60)
                    )
                    .addGroup(layout.createSequentialGroup()
                    		.addComponent(cookieSwipeTextFieldToCc, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, 2000)
                        .addGap(60, 60, 60)
                    )
                    .addGroup(layout.createSequentialGroup()
                    		.addComponent(cookieSwipeTextFieldSubject, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, 2000)
                            .addGap(60, 60, 60)
                    )
        		)
                .addContainerGap(103, Short.MAX_VALUE)
    		)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cookieSwipeLabelTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cookieSwipeTextFieldTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cookieSwipeButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cookieSwipeButtonAttach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        )
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cookieSwipeTextFieldToCc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cookieSwipeLabelCc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        )
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cookieSwipeLabelSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cookieSwipeTextFieldSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        )
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, 2000)
                        .addGap(15, 15, 15)
                    )
                )
                .addContainerGap(29, Short.MAX_VALUE)
            )
        );

        //pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	/* Set the Nimbus look and feel */
    	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    	 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    	 */
    	try {
    	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
	    		if ("Nimbus".equals(info.getName())) {
	    		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
	    		    break;
	    		}
    	    }
    	} catch (ClassNotFoundException ex) {
    	    java.util.logging.Logger.getLogger(MailCSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    	} catch (InstantiationException ex) {
    	    java.util.logging.Logger.getLogger(MailCSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    	} catch (IllegalAccessException ex) {
    	    java.util.logging.Logger.getLogger(MailCSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
    	    java.util.logging.Logger.getLogger(MailCSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    	}
    	//</editor-fold>

    	/* Create and display the form */
    	java.awt.EventQueue.invokeLater(new Runnable() {
    	    public void run() {
    	    	new MailCSFrame().setVisible(true);
    	    }
    	});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.component.CookieSwipeButtonSprite cookieSwipeButtonSend;
    private view.component.CookieSwipeButtonSprite cookieSwipeButtonAttach;
    private view.component.CookieSwipeLabel cookieSwipeLabelCc;
    private view.component.CookieSwipeLabel cookieSwipeLabelSubject;
    private view.component.CookieSwipeLabel cookieSwipeLabelTo;
    private view.component.CookieSwipeTextField cookieSwipeTextFieldSubject;
    private view.component.CookieSwipeTextField cookieSwipeTextFieldTo;
    private view.component.CookieSwipeTextField cookieSwipeTextFieldToCc;
    private javax.swing.JScrollPane jScrollPane1;
    private view.component.CookieSwipeTextArea jTextAreaMail;
    // End of variables declaration//GEN-END:variables

    @Override
    public HashMap<String, Object> getJComponent() {
        return hsJcomponents;
    }

    @Override
    public void refresh() {
    	throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
